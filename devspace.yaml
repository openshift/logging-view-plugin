version: v2beta1
name: logging-view-plugin

vars:
  USE_HELM:
    question: Do you want to deploy using helm? (y/[n])
    default: "n"
    noCache: true

functions:
  scale_down_coo: |-
    kubectl scale --replicas=0 -n ${DEVSPACE_NAMESPACE} deployment/observability-operator
  scale_up_coo: |-
    kubectl scale --replicas=1 -n ${DEVSPACE_NAMESPACE} deployment/observability-operator

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      scale_down_coo               # 3. Scale down COO so it doesn't fight over the logging-view-plugin if you aren't using helm
      create_deployments --all     # 4. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 5. Start dev mode "app" (see "dev" section)
  purge:
    run: |-
      stop_dev --all
      purge_deployments --all
      run_dependencies --all --pipeline purge
      scale_up_coo

deployments: $( [ ${USE_HELM} == "y" ] && cat devspace-deployment.yaml || echo "app:")

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
    labelSelector:
      # Use the instance selector that COO & helm add
      app.kubernetes.io/instance: logging
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    devImage: quay.io/rh-ee-pyurkovi/logging-view-plugin:devspace
    # Sync files between the local filesystem and the development container
    sync:
      - path: ./web/dist:/opt/app-root/web/dist
        startContainer: true
    command: ["make"]
    args: ["start-devspace-backend"]
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
